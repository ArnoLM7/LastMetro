stages:
- lint
- test

# Variables globales
variables:
  NODE_ENV: test
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

# Cache pour accÃ©lÃ©rer les builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .npm/

# -----------------------------
# LINT STAGE
# -----------------------------

lint:
  stage: lint
  image: node:20-alpine
  script:
  - npm ci
  - npx eslint . --max-warnings=0
  only:
  - merge_requests
  - main

# -----------------------------
# TEST STAGE
# -----------------------------
test:
  stage: test
  image: node:20-alpine
  services:
  - name: postgres:15-alpine
    alias: last_metro_db_test
  variables:
    POSTGRES_USER: "last_metro_user_test"
    POSTGRES_PASSWORD: "last_metro_password_test"
    POSTGRES_DB: "last_metro_db_test"
    POSTGRES_HOST: "last_metro_db_test"
    POSTGRES_PORT: "5432"
    DB_HOST: "last_metro_db_test"
    DB_PORT: "5432"
  before_script:
  - apk add --no-cache bash postgresql-client
  - until pg_isready -h $DB_HOST -p $DB_PORT -U $POSTGRES_USER; do echo "Waiting for Postgres..."; sleep 1; done
  - psql -h $DB_HOST -U $POSTGRES_USER -d $POSTGRES_DB -f db/schema.sql
  script:
  - echo "ðŸ“¦ Installation des dÃ©pendances..."
  - npm ci
  - echo "ðŸ§ª Lancement des tests unitaires et d'intÃ©gration..."
  - npm test
  only:
  - merge_requests
  - main
